
PLATFORM_IS_WINDOWS=1
PLATFORM_IS_CYGWIN=1

ifndef SUBSYSTEM
SUBSYSTEM=WINDOWS
endif

ifeq ($(SUBSYSTEM),WINDOWS)
LINKARG=-mwindows
else
LINKARG=
endif

# convert a name into a library name or an executable name
fLIBNAME=$(1).lib
fEXENAME=$(addsuffix .exe,$(1))

# convert source file names to object file names
fTARGETS=$(patsubst %.cpp,%.o,$(filter %.cpp,$(1))) \
	$(patsubst %.c,%.o,$(filter %.c,$(1))) \
	$(patsubst %.rc,%.RES,$(filter %.rc,$(1)))

# C++ RTTI options
_RTTI_0=-fno-rtti
_RTTI_1=-frtti
_RTTI_=$(_RTTI_0)

# C++ exception options
_EX_0=-fno-exceptions
_EX_1=
_EX_=$(_EX_0)

# optimization options
_OPT_0=
_OPT_1=-O1
_OPT_2=-O2
_OPT_=$(_OPT_0)

# some other optimization things
_FAST_1=-ffast-math -fomit-frame-pointer

%.o: %.cpp
	gcc -c -g -Wall -DWIN32 -DCYGWIN $(_OPT_$(CPP_OPT)) $(addprefix -I ,$(INCLUDE_PATHS)) $(addprefix -D,$(DEFINES)) $(_RTTI_$(CPP_RTTI)) $(_EX_$(CPP_EX)) $(_FAST_$(FAST)) $(CPP_FLAGS) $<

%.o: %.c
	gcc -c -g -Wall -DWIN32 -DCYGWIN $(_OPT_$(CPP_OPT)) $(addprefix -I ,$(INCLUDE_PATHS)) $(addprefix -D,$(DEFINES)) $(_FAST_$(FAST)) $(CPP_FLAGS) $<

%.lib:
	ar rc $@ $^

%.RES: %.rc
	windres -I rc -O coff $< $@

fLINK=gcc $(LINKARG) -o $(1) -g $(addprefix -L ,$(LIB_PATHS)) $(2) 
fLIB=-l$(1)

LINKMATH=
LINKWIN=-lComctl32 -lkernel32 -luser32 -lgdi32
LINKOPENGL=-lOpenGL32 -lGlu32

clean: clean_subdirs
	-rm *~ *.obj *.lib *.a *.o *.res *.RES $(EXTRA_CLEAN)

make_depend: $(wildcard *.cpp *.c)
	$(if $^,gcc -MM $(addprefix -I ,$(INCLUDE_PATHS)) $(addprefix -D,$(DEFINES)) $^ > Dependencies)

# misc
COPY_CMD=cp
