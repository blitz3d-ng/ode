# C++ Console Executable Makefile autogenerated by premake
# Don't edit this file! Instead edit `premake.lua` then rerun `make`

ifndef CONFIG
  CONFIG=DebugSingleDLL
endif

ifeq ($(CONFIG),DebugSingleDLL)
  BINDIR := ../../lib/DebugSingleDLL
  LIBDIR := ../../lib/DebugSingleDLL
  OBJDIR := obj/drawstuff/DebugSingleDLL
  OUTDIR := ../../lib/DebugSingleDLL
  CPPFLAGS := -MMD -D "WIN32" -D "DS_DLL" -D "USRDLL" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -Wl,--out-implib="../../lib/DebugSingleDLL/libdrawstuffd.a" -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_DLL" -D "USRDLL" -I "../../include" -I "../../ode/src"
  TARGET := drawstuffd.dll
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),ReleaseSingleDLL)
  BINDIR := ../../lib/ReleaseSingleDLL
  LIBDIR := ../../lib/ReleaseSingleDLL
  OBJDIR := obj/drawstuff/ReleaseSingleDLL
  OUTDIR := ../../lib/ReleaseSingleDLL
  CPPFLAGS := -MMD -D "WIN32" -D "DS_DLL" -D "USRDLL" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -fomit-frame-pointer
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -Wl,--out-implib="../../lib/ReleaseSingleDLL/libdrawstuff.a" -s -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_DLL" -D "USRDLL" -I "../../include" -I "../../ode/src"
  TARGET := drawstuff.dll
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),DebugSingleLib)
  BINDIR := ../../lib/DebugSingleLib
  LIBDIR := ../../lib/DebugSingleLib
  OBJDIR := obj/drawstuff/DebugSingleLib
  OUTDIR := ../../lib/DebugSingleLib
  CPPFLAGS := -MMD -D "WIN32" -D "DS_LIB" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_LIB" -I "../../include" -I "../../ode/src"
  TARGET := libdrawstuffd.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),ReleaseSingleLib)
  BINDIR := ../../lib/ReleaseSingleLib
  LIBDIR := ../../lib/ReleaseSingleLib
  OBJDIR := obj/drawstuff/ReleaseSingleLib
  OUTDIR := ../../lib/ReleaseSingleLib
  CPPFLAGS := -MMD -D "WIN32" -D "DS_LIB" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -fomit-frame-pointer
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_LIB" -I "../../include" -I "../../ode/src"
  TARGET := libdrawstuff.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),DebugDoubleDLL)
  BINDIR := ../../lib/DebugDoubleDLL
  LIBDIR := ../../lib/DebugDoubleDLL
  OBJDIR := obj/drawstuff/DebugDoubleDLL
  OUTDIR := ../../lib/DebugDoubleDLL
  CPPFLAGS := -MMD -D "WIN32" -D "DS_DLL" -D "USRDLL" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -Wl,--out-implib="../../lib/DebugDoubleDLL/libdrawstuffd.a" -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_DLL" -D "USRDLL" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  TARGET := drawstuffd.dll
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),ReleaseDoubleDLL)
  BINDIR := ../../lib/ReleaseDoubleDLL
  LIBDIR := ../../lib/ReleaseDoubleDLL
  OBJDIR := obj/drawstuff/ReleaseDoubleDLL
  OUTDIR := ../../lib/ReleaseDoubleDLL
  CPPFLAGS := -MMD -D "WIN32" -D "DS_DLL" -D "USRDLL" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -fomit-frame-pointer
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -shared -Wl,--out-implib="../../lib/ReleaseDoubleDLL/libdrawstuff.a" -s -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_DLL" -D "USRDLL" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  TARGET := drawstuff.dll
  BLDCMD = $(CXX) -o $(OUTDIR)/$(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),DebugDoubleLib)
  BINDIR := ../../lib/DebugDoubleLib
  LIBDIR := ../../lib/DebugDoubleLib
  OBJDIR := obj/drawstuff/DebugDoubleLib
  OUTDIR := ../../lib/DebugDoubleLib
  CPPFLAGS := -MMD -D "WIN32" -D "DS_LIB" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -g
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_LIB" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  TARGET := libdrawstuffd.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

ifeq ($(CONFIG),ReleaseDoubleLib)
  BINDIR := ../../lib/ReleaseDoubleLib
  LIBDIR := ../../lib/ReleaseDoubleLib
  OBJDIR := obj/drawstuff/ReleaseDoubleLib
  OUTDIR := ../../lib/ReleaseDoubleLib
  CPPFLAGS := -MMD -D "WIN32" -D "DS_LIB" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  CFLAGS += $(CPPFLAGS) $(TARGET_ARCH) -O3 -fomit-frame-pointer
  CXXFLAGS := $(CFLAGS)
  LDFLAGS += -L$(BINDIR) -L$(LIBDIR) -s -luser32 -lopengl32 -lglu32 -lwinmm -lgdi32
  LDDEPS :=
  RESFLAGS := -D "WIN32" -D "DS_LIB" -D "dDOUBLE" -I "../../include" -I "../../ode/src"
  TARGET := libdrawstuff.a
  BLDCMD = ar -rcs $(OUTDIR)/$(TARGET) $(OBJECTS) $(TARGET_ARCH)
endif

OBJECTS := \
	$(OBJDIR)/drawstuff.o \
	$(OBJDIR)/windows.o \

RESOURCES := \
	$(OBJDIR)/resources.res \

MKDIR_TYPE := msdos
CMD := $(subst \,\\,$(ComSpec)$(COMSPEC))
ifeq (,$(CMD))
  MKDIR_TYPE := posix
endif
ifeq (/bin/sh.exe,$(SHELL))
  MKDIR_TYPE := posix
endif
ifeq ($(MKDIR_TYPE),posix)
  CMD_MKBINDIR := mkdir -p $(BINDIR)
  CMD_MKLIBDIR := mkdir -p $(LIBDIR)
  CMD_MKOUTDIR := mkdir -p $(OUTDIR)
  CMD_MKOBJDIR := mkdir -p $(OBJDIR)
else
  CMD_MKBINDIR := $(CMD) /c if not exist $(subst /,\\,$(BINDIR)) mkdir $(subst /,\\,$(BINDIR))
  CMD_MKLIBDIR := $(CMD) /c if not exist $(subst /,\\,$(LIBDIR)) mkdir $(subst /,\\,$(LIBDIR))
  CMD_MKOUTDIR := $(CMD) /c if not exist $(subst /,\\,$(OUTDIR)) mkdir $(subst /,\\,$(OUTDIR))
  CMD_MKOBJDIR := $(CMD) /c if not exist $(subst /,\\,$(OBJDIR)) mkdir $(subst /,\\,$(OBJDIR))
endif

.PHONY: clean

$(OUTDIR)/$(TARGET): $(OBJECTS) $(LDDEPS) $(RESOURCES)
	@echo Linking drawstuff
	-@$(CMD_MKBINDIR)
	-@$(CMD_MKLIBDIR)
	-@$(CMD_MKOUTDIR)
	@$(BLDCMD)

clean:
	@echo Cleaning drawstuff
ifeq ($(MKDIR_TYPE),posix)
	-@rm -f $(OUTDIR)/$(TARGET)
	-@rm -rf $(OBJDIR)
else
	-@if exist $(subst /,\,$(OUTDIR)/$(TARGET)) del /q $(subst /,\,$(OUTDIR)/$(TARGET))
	-@if exist $(subst /,\,$(OBJDIR)) del /q $(subst /,\,$(OBJDIR))
	-@if exist $(subst /,\,$(OBJDIR)) rmdir /s /q $(subst /,\,$(OBJDIR))
endif

$(OBJDIR)/drawstuff.o: ../../drawstuff/src/drawstuff.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/windows.o: ../../drawstuff/src/windows.cpp
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -o $@ -c $<

$(OBJDIR)/resources.res: ../../drawstuff/src/resources.rc
	-@$(CMD_MKOBJDIR)
	@echo $(notdir $<)
	@windres $< -O coff -o $@ $(RESFLAGS)

-include $(OBJECTS:%.o=%.d)

