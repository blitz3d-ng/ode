#########################################################################
#                                                                       #
# Open Dynamics Engine, Copyright (C) 2001 Russell L. Smith.            #
#   Email: russ@q12.org   Web: www.q12.org                              #
#                                                                       #
# This library is free software; you can redistribute it and/or         #
# modify it under the terms of the GNU Lesser General Public            #
# License as published by the Free Software Foundation; either          #
# version 2.1 of the License, or (at your option) any later version.    #
#                                                                       #
# This library is distributed in the hope that it will be useful,       #
# but WITHOUT ANY WARRANTY; without even the implied warranty of        #
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU      #
# Lesser General Public License for more details.                       #
#                                                                       #
# You should have received a copy of the GNU Lesser General Public      #
# License along with this library (see the file LICENSE.TXT); if not,   #
# write to the Free Software Foundation, Inc., 59 Temple Place,         #
# Suite 330, Boston, MA 02111-1307 USA.                                 #
#                                                                       #
#########################################################################

PLATFORM_IS_WINDOWS=1

ifndef SUBSYSTEM
SUBSYSTEM=WINDOWS
endif

# convert a name into a library name or an executable name
fLIBNAME=$(1).lib
fEXENAME=$(addsuffix .exe,$(1))

# convert source file names to object file names
fTARGETS=$(patsubst %.cpp,%.obj,$(filter %.cpp,$(1))) \
	$(patsubst %.c,%.obj,$(filter %.c,$(1))) \
	$(patsubst %.rc,%.RES,$(filter %.rc,$(1)))

# C++ RTTI options
_RTTI_0=/GR-
_RTTI_1=/GR
_RTTI_=$(_RTTI_0)

# C++ exception options
_EX_0=/GX-
_EX_1=/GX
_EX_=$(_EX_0)

# optimization options
_OPT_0=
_OPT_1=/O1
_OPT_2=/O2
_OPT_=$(_OPT_0)

%.obj: %.cpp
	cl /nologo /c /W3 /GF -DWIN32 $(_OPT_$(CPP_OPT)) $(addprefix /I,$(INCLUDE_PATHS)) $(addprefix /D,$(DEFINES)) $(_RTTI_$(CPP_RTTI)) $(_EX_$(CPP_EX)) $<

%.obj: %.c
	cl /nologo /c /W3 /GF -DWIN32 $(_OPT_$(CPP_OPT)) $(addprefix /I,$(INCLUDE_PATHS)) $(addprefix /D,$(DEFINES)) $<

%.RES: %.rc
	rc /r $<

%.lib:
	lib /nologo /SUBSYSTEM:$(SUBSYSTEM) /OUT:$@ $^

fLINK=link /nologo /INCREMENTAL:NO /SUBSYSTEM:$(SUBSYSTEM) /OUT:$(1) $(addprefix /LIBPATH:,$(LIB_PATHS)) $(2) 
fLIB=$(1).lib

LINKMATH=
LINKWIN=Comctl32.lib kernel32.lib user32.lib gdi32.lib
LINKOPENGL=OpenGL32.lib Glu32.lib

clean: clean_subdirs
	-del *~ *.obj *.lib *.a *.o *.res *.RES $(EXTRA_CLEAN)

make_depend:
	@echo depend target does nothing under windows.

# misc
COPY_CMD=copy
DIRSEP:=$(strip \)
